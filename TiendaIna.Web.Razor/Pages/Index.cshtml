@page
@using TiendaIna.Core.Entities
@using TiendaIna.Core.Models
@using TiendaIna.Core.Services
@model IndexViewModel
@{
    ViewData["Title"] = "INICIO";
}

@inject IProductsService ProductsService //podria configurarlo desde el page-model profundizar!
@{
    var producto = await ProductsService.GetProduct(1);
    var productos = await ProductsService.GetProducts();
    var categories = producto.Categories?.ToList() ?? new List<CategoryModel>();
}

@*
<div class="text-center">
    <h1 class="display-4">Tienda INA</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
*@


<nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
        <!-- Logo -->
        <a class="navbar-brand" href="#">
            <img src="~/lib/images/logo_oficial-sin fondo negro.sinMargenpng.png" alt="Logo" height="50">
        </a>

        <!-- Texto corto -->
        <span class="navbar-text me-auto fs-3 fw-bold">
            "TIENDA INA" tu tienda de confianza.
        </span>

        <!-- Buscador -->
        <form class="d-flex" role="search">
            <input class="form-control me-2" type="search" placeholder="Buscar productos..." aria-label="Buscar">
            <button class="btn btn-outline-success" type="submit">Buscar</button>
        </form>
    </div>
</nav>


@*BARRA LATERAL*@

<div class="container-fluid">
    <div class="row">

        <!-- Barra lateral -->
        <div class="col-md-3">
            <aside class="table-borderless p-3" style="min-height: 100vh;">


                <h5 class="mb-4">Categorías</h5>
                <ul class="nav flex-column">

                    <!-- PERFUMERIA -->
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="collapse" href="#subPERFUMERIA" role="button" aria-expanded="false" aria-controls="subElectronica">
                            PERFUMERIA
                        </a>
                        <div class="collapse" id="subPERFUMERIA">
                            <ul class="nav flex-column ms-3">
                                <li><a class="nav-link" href="/Categorias/PERFUMERIA/PERFUMES MASCULINOS">PERFUMES MASCULINOS</a></li>
                                <li><a class="nav-link" href="/Categorias/PERFUMERIA/PERFUMES FEMENINOS">PERFUMES FEMENINOS</a></li>
                                <li><a class="nav-link" href="/Categorias/PERFUMERIA/PERFUMES UNISEX">PERFUMES UNISEX</a></li>
                                <li><a class="nav-link" href="/Categorias/PERFUMERIA/PERFUMES INFANTILES">PERFUMES INFANTILES</a></li>
                            </ul>
                        </div>
                    </li>

                    <!-- PRODUCTOS CAPILARES -->
                    <li class="nav-item">
                        <a class="nav-link" href="/CATEGORIAS/PRODUCTOSCCAPILARES">PRODUCTOS CAPILARES</a>
                    </li>

                </ul>
            </aside>
        </div>

        @*contenedor espacio fuera de la barra lateral*@

        <div class="col-md-9">


            @*Prueba ofertas semanales*@
            <div class="alert alert-dark custom-alertSale text-center" role="alert">
                🔥 OFERTAS SEMANALES 🔥
            </div>




            @*Prueba de ofertas*@


            @*logica destinada al ProductBoxViewModel *@
            <div class="row justify-content-center fondo-ofertas py-4">
                @if (productos != null && productos.Any(p => p.IsOutstanding == true)) {
                    @foreach (var p in productos.Where(p => p.IsOutstanding == true).Take(3)) {
                        <div class="col-12 col-md-4 mb-4">
                            <vc:product-box-sale product="@p"></vc:product-box-sale>
                        </div>
                    }
                } else {
                    <div class="text-center text-white">
                        <p>No hay ofertas destacadas en este momento.</p>
                    </div>
                }
            </div>

            @*
                @if (productos != null && productos.Any(p => p.IsOutstanding == true)) {
                    foreach (var p in productos.Where(p => p.IsOutstanding == true).Take(3)) {}
                *@



            @*CARTEL DE PRODUCTOS*@
            <div class="alert alert-dark custom-alert" role="alert">
                NUESTROS PRODUCTOS
            </div>


            @*TABLAS PRODUCTOS VISTA PREVIA*@

            <div class="row">
                @foreach (var p in productos) {
                    <div class="col-6 col-md-4 mb-4">
                        <vc:product-box product="@p" show-categories="false"></vc:product-box>
                    </div>
                }
            </div>
            @*Agregar paginacion de productos*@
        </div>
    </div>
</div>


